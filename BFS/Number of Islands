class Solution 
{
public:
    int numIslands(vector<vector<char>>& grid) 
    {
        std::vector<int> dx{-1,1,0,0};
        std::vector<int> dy{0,0,-1,1};
        std::vector<std::vector<int>> visit(grid.size(),std::vector<int>(grid[0].size(),0));
        std::queue<std::pair<int,int>> q;
        int count=0;

        for(int i=0; i<grid.size(); ++i)
        {
            for(int j=0; j<grid[0].size(); ++j)
            {
                if(visit[i][j]==1||grid[i][j]=='0')
                {
                    continue;
                }
                visit[i][j]=1;
                q.push({i,j});
                ++count;
                while(!q.empty())
                {
                    std::pair<int,int> current=q.front();
                    q.pop();

                    for(int i=0; i<4; ++i)
                    {
                        int x=current.first+dx[i];
                        int y=current.second+dy[i];
                        if(x<0||x>=grid.size()||y<0||y>=grid[0].size())
                        {
                            continue;
                        }
                        if(visit[x][y]==1||grid[x][y]=='0')
                        {
                            continue;
                        }
                        visit[x][y]=1;
                        q.push({x,y});
                    }
                }

            }
        }
           return count;
    }
};
