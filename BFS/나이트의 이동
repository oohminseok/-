#include <iostream>
#include <string>
#include <queue>
#include <vector>
#include <algorithm>

int main() 
{
	std::ios::sync_with_stdio(0);
	std::cout.tie(0);
	std::cin.tie(0);

	int t; //테스트 케이스;
	std::cin >> t;

	while (t > 0)
	{
		--t;
		int i; //체스 판 크기;
		std::cin >> i;
		std::vector<std::vector<int>> dist(i, std::vector<int>(i, -1)); //거리표시
		std::vector<std::pair<int, int>> c{ {-1,-2},{-2,-1},{-2,1},{-1,2},{1,-2},{2,-1},{2,1},{1,2} }; //대각선 방향들
		std::queue<std::pair<int, int>> q;
		
		int c1, c2;
		for (int i = 0; i <1; ++i)
		{
			std::cin >> c1>>c2; //나이트가 현재 있는 칸;
			q.push({ c1,c2 });
		}
		dist[c1][c2] = 0;

		int m1, m2;
		for (int i = 0; i < 1; ++i)
		{
			std::cin >> m1 >> m2; //나이트가 이동할 칸
		}
		while (!q.empty())
		{
			std::pair<int, int> current = q.front();
			q.pop();
			for (int j = 0; j < c.size(); ++j)
			{
				int fx = current.first + c[j].first;
				int fy = current.second + c[j].second;

				if (fx < 0 || fx >= i || fy < 0 || fy >= i)
				{
					continue;
				}
				if (dist[fx][fy]>-1)
				{
					continue;
				}
				dist[fx][fy] = dist[current.first][current.second] + 1;
				q.push({ fx,fy });
			}
		}
		std::cout << dist[m1][m2] << '\n';
	}

}
