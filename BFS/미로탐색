#include <iostream>
#include <string>
#include <queue>
#include <vector>
#include <algorithm>

int main() 
{
	std::ios::sync_with_stdio(0);
	std::cout.tie(0);
	std::cin.tie(0);
	
	int n, m;
	std::cin >> n >> m;

	std::string board[102];
	for (int i = 0;i < n; ++i)
	{
		std::cin >> board[i];
	}

	std::vector<std::vector<int>> dist(n, std::vector<int>(m, -1));// 각 미로거리
	std::vector<int>x{ -1,1,0,0 }; //상하
	std::vector<int> y{ 0,0,1,-1 };// 좌우


	dist[0][0] = 0;
	std::queue<std::pair<int,int>> q;
	q.push({ 0,0 });

	while (!q.empty())
	{
		std::pair<int, int> current = q.front();
		q.pop();

		for (int i = 0; i < x.size(); ++i)
		{
			int pointX = current.first + x[i];
			int pointY = current.second + y[i];
			if (pointX < 0 || pointX >= n||pointY<0||pointY>=m)
			{
				continue;
			}
			if (dist[pointX][pointY]>=0 || board[pointX][pointY] == '0')
			{
				continue;
			}
			
			dist[pointX][pointY] = dist[current.first][current.second] + 1;
			q.push({ pointX,pointY });
		}
	}
	std::cout << dist[n - 1][m - 1] + 1;
}
